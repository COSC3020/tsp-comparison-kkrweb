My Process for going about solving the exercise - Mainly a note to self and to help keep my ideas / memory straight:



Directly inported in the primary js files from my previously approved held-karp and local search exercises.

Create matrix files, storing matrix varaibles of increasing size. One is random values and one is a directly increasing matrix while still holding the symm,etry via the 0 diagonal.

Create projmain.js, implement usages of the inported files and the created matrix storage files.

Feed the JS stack 50 GB of memory so it stops hating me via `node --max-old-space-size=51200 projmain.js` on my machine.

Record runtime results, before I get this inevitable error at 27x27 telling me that the array is too large to be handled.

Per the cited results (specify) below, I have the impression that this is a fundamental JS limitation rather than the doing of my implementation directly per se.

Either way I will address this to the best of my ability if need be.

Next, make a CSV using the runtimes corresponding to the matrix sizes

Use R to create 3 plots of this. One for TSP HK, one for TSP LS, and one for them overlaid to make the comparison easier.
